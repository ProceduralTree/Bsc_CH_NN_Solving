#+title: Testing

*  Input testing
using epsilon from paper:
\begin{align*}
\varepsilon &=\frac{mh}{2 \sqrt{2} \tan^{-1}{0.9}}
\end{align*}


#+name: inputs
|   dt |   m |    h |      epsilon |
|------+-----+------+--------------|
| 1e-3 | 150 | 1e-3 | 1.2630752e-3 |
| 1e-2 |  30 | 1e-2 | 2.5261505e-3 |
| 1e-1 |   3 | 1e-1 | 2.5261505e-3 |
| 1e-3 |  30 | 1e-2 | 2.5261505e-3 |
#+TBLFM: @2$4..@>$4=($2 * $3)/( 2  * sqrt(2) * arctan(0.9) )

#+begin_src python :tangle testing/test.py :results file graphics output :file testing/images/smooth.png :var testinputs=inputs :session test
import numpy as np
from multi_solver import CH_2D_Multigrid_Solver
import testUtils as tu
import seaborn as sns
import matplotlib.pyplot as plt

testphase = tu.k_spheres_phase(10, 15, size=128)
testinputs = testinputs[0]
print(testinputs)
testsolver = CH_2D_Multigrid_Solver(
    tu.wprime, testphase, testinputs[0], testinputs[2], testinputs[3]
)
testsolver.set_xi_and_psi()
testsolver.SMOOTH(10)
sns.heatmap(testsolver.phase_small)
#+end_src

#+RESULTS:
[[file:testing/images/smooth.png]]


#+begin_src python :var testinputs=inputs :tangle testing/test.py :results output :async :session python
import numpy as np
from multi_solver import CH_2D_Multigrid_Solver
import testUtils as tu
import os
path = "/home/jon/Projects/Bsc_CH_NN_Solving/testing"
testinputs = testinputs[0]
testphase = tu.k_spheres_phase(10, 15, size=128)
testsolver = CH_2D_Multigrid_Solver(
    tu.wprime, testphase, testinputs[0], testinputs[2], testinputs[3]
)
phases = []
mus = []
for i in range(40):
    testsolver.solve(1, 10)
    phases += [testsolver.phase_small]
    mus += [testsolver.mu_small]

np.savez(f"{path}/data/testdata", phase=phases , mu=mus )
#+end_src

#+RESULTS:
: c4d4355f-124f-4d98-a592-32047f266ad5

#+begin_src python :tangle testing/test.py :results file :file testing/images/testdata.gif
import os
from plot_data import plot
path = "/home/jon/Projects/Bsc_CH_NN_Solving/testing"

plot(path, "data", "images")
#+end_src

#+RESULTS:
[[file:testing/images/testdata.gif]]


#+begin_src python
import os
path = "/home/jon/Projects/Bsc_CH_NN_Solving/testing"

savedir = "images"
d = "testdata"
os.system(
    f"convert -layers OptimizePlus -delay 1x24 -quality 99 {path}/{savedir}/{d}/*.png -loop 0 {path}/{savedir}/{d}.gif"
)
#+end_src

#+RESULTS:
: None
